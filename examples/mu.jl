using AffineScaler: rescale_one_zero
using GeneralizedSP2
using GershgorinDiscs
using LinearAlgebra
using Plots
using Printf
using ToyHamiltonians

PLOT_DEFAULTS = Dict(
    :dpi => 400,
    :framestyle => :box,
    :linewidth => 2,
    :markersize => 2,
    :markerstrokewidth => 0,
    :markerstrokealpha => 0,
    :minorticks => 5,
    :titlefontsize => 8,
    :plot_titlefontsize => 8,
    :guidefontsize => 8,
    :tickfontsize => 6,
    :legendfontsize => 8,
    :left_margin => (1, :mm),
    :grid => nothing,
    :legend_foreground_color => nothing,
    :legend_background_color => nothing,
    :legend_position => :topright,
    :background_color_inside => nothing,
    :color_palette => :tab10,
)

Œ≤ = 1.25
Œº = 100
H = diagonalhamil(1000, 235)
spectral_bounds = eigvals_extrema(H)
Œ≤‚Ä≤ = rescale_beta(spectral_bounds)(Œ≤)
Œº‚Ä≤ = rescale_mu(spectral_bounds)(Œº)
H_scaled = rescale_one_zero(spectral_bounds)(H)
nlayers = 18

lower_bound, upper_bound = 0, 1
ùõÜ‚Ä≤ = chebyshevnodes_1st(500, (lower_bound, upper_bound))
fitted = fit_fermi_dirac(ùõÜ‚Ä≤, Œº‚Ä≤, Œ≤‚Ä≤, init_model(Œº‚Ä≤, nlayers); max_iter=100_000);
dm = fermi_dirac(fitted.model)(H_scaled)
N = tr(dm)
N_target = N + 75

plot(; PLOT_DEFAULTS..., size=(1600 / 3, 400))
œµ‚Çò·µ¢‚Çô, œµ‚Çò‚Çê‚Çì = extrema(eigvals(H))
Œº‚Ä≤_histories = []
spectral_bounds_histories = []
for Œº_init in (œµ‚Çò·µ¢‚Çô + 10):50:(œµ‚Çò‚Çê‚Çì - 10)
    Œº‚Ä≤_history, spectral_bounds_history = estimate_mu(
        N_target,
        H,
        Œ≤,
        ùõÜ‚Ä≤,
        spectral_bounds,
        Œº_init,
        nlayers;
        occ_tol=1e-4,
        fit_max_iter=10000,
    )
    Œº‚Ä≤_final, spectral_bounds_final = Œº‚Ä≤_history[end], spectral_bounds_history[end]
    fitted_final = fit_fermi_dirac(
        ùõÜ‚Ä≤, Œº‚Ä≤_final, Œ≤‚Ä≤, init_model(Œº‚Ä≤_final, nlayers); max_iter=100_000
    )
    H_scaled = rescale_one_zero(spectral_bounds_final)(H)  # Calculate the final H‚Ä≤
    dm_final = fermi_dirac(fitted_final.model)(H_scaled)
    N_final = tr(dm_final)
    @show diff = N_final - N_target
    push!(Œº‚Ä≤_histories, Œº‚Ä≤_history)
    push!(spectral_bounds_histories, spectral_bounds_history)

    plot!(
        recover_mu_history(Œº‚Ä≤_history, spectral_bounds_history);
        label="Œº·µ¢‚Çô·µ¢‚Çú=" * Printf.format(Printf.Format("%.4f"), Œº_init),
        PLOT_DEFAULTS...,
    )
end
max_iter = maximum(map(length, Œº‚Ä≤_histories))
xlabel!("Newton iteration")
ylabel!(raw"$\mu$")
title!(
    raw"Convergence of the estimated $\mu$ starting from different $\mu_\textnormal{init}$ given an $N_\textnormal{target}$",
)
xlims!(1, max_iter)
plot!(; xminorticks=0)
savefig("mu_convergence.pdf")
